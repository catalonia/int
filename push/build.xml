<project name="tspush" basedir="." default="createServerJar">
    <property environment="env" />
    <property name="build.dir" value="build" />
    <property name="debuglevel" value="source,lines,vars" />
    <property name="debug" value="on" />
    <property name="optimize" value="false" />
    <property name="target" value="1.6" />
    <property name="source" value="1.6" />
    <property name="dist" value="dist" />
    <property name="docsfolder" value="docs" />
    <property name="temp" value="${dist}/temp" />
    <property name="server.jar" value="tspush.jar" />
    <property name="PROJECT_WS_NAME" value="tspush" />
    <path id="webAppLibrary.classpath">
        <fileset dir="${basedir}/lib">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${basedir}/libExtras">
            <include name="*.jar" />
        </fileset>
    </path>
    <path id="tspush.classpath">
        <pathelement location="build/classes" />
        <path refid="webAppLibrary.classpath" />
        <!-- <path refid="EAR Libraries.libraryclasspath"/> -->
    </path>
    <target name="init">
        <mkdir dir="${build.dir}/classes" />
        <copy includeemptydirs="false" todir="${build.dir}/classes">
            <fileset dir="src">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
        <mkdir dir="${dist}" />
        <mkdir dir="${temp}" />
    </target>
    <target depends="init" name="compileProject">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.dir}/classes" />
        <mkdir dir="${build.dir}/resources" />
        <!--First let's compile the classes -->
        <echo message="${ant.project.name}: ${ant.file}" />
        <javac optimize="${optimize}" debug="${debug}" debuglevel="${debuglevel}"
            failonerror="true" verbose="false" deprecation="on"
            destdir="build/classes" source="${source}" target="${target}">
            <src path="src" />
            <classpath refid="tspush.classpath" />
        </javac>
    </target>
    <target name="serverJar" depends="compileProject">
        <jar destfile="${build.dir}/${server.jar}">
            <fileset dir="${build.dir}/classes">
                <include name="**/*.class" />
                <exclude name="**/test/*.class" />
            </fileset>
        </jar>
        <copy toDir="${dist}">
            <fileset dir="${build.dir}">
                <include name="${server.jar}" />
            </fileset>
        </copy>
        <!-- <delete dir="${build.dir}/${server.jar}" /> -->
    </target>
    <target depends="init" name="prepare.repo">
    </target>
    <target depends="clean,init,prepare.repo,serverJar" name="createServerJar">
    </target>
    <target name="clean">
        <delete dir="${build.dir}" />
	<echo message="starting target clean"/>
	<antcall target="clean_classes"/>
	<echo message="...finished target clean."/>
    </target>
  <target name="clean_classes">
	<echo message="starting target clean_classes"/>
	<mkdir dir="${build.dir}/classes"/>
	<delete>
	    <fileset dir="${build.dir}/classes" includes="**/*.class"/>
	</delete>
	<echo message="...finished target clean_classes."/>
  </target>

    <target name="version">
        <echo message="Java Version=${ant.java.version}" />
        <echo message="Java Version=${java.vendor.url}" />
        <echo message="Java Version=${java.vendor}" />
        <echo message="Java Version=${java.home}" />
        <echo message="Java Version=${java.vm.name}" />
        <echo message="Java Version=${java.vm.version}" />
    </target>
    <target name="targets">
        <echo> ANT build targets for the project => ${PROJECT_WS_NAME}
            The following targets are available: - init ................
            - prepare ................ - repo ................ -
            serverJar ................ - createWar ................ -
            
        </echo>
    </target>
</project>